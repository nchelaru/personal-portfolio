blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::hugo_version()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
## Import libraries
library(dplyr, quietly = T)
library(knitr, quietly = T)
library(kableExtra, quietly = T)
## Import dataframe variable from Python runtime
df <- py$df
library(reticulate)
use_python('/Users/nancy/miniconda3/bin/python')
library(reticulate)
use_python('/Users/nancy/miniconda3/bin/python')
## Import libraries
library(dplyr, quietly = T)
library(knitr, quietly = T)
library(kableExtra, quietly = T)
## Import dataframe variable from Python runtime
df <- py$df
head(df)
library(reactable)
reactable(df)
## Preprocess the image links to allow rendering
df$Image = sprintf('![](%s)', df$Image)
## Hyperlink the titles
df$Title = sprintf("[%s](%s)", df$Title, df$URL)
## Drop the URL column
df$URL <- NULL
## Create table
kable(df) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
library(reactable)
reactable(df)
library(reactable)
reactable(df)
library(reticulate)
use_python('/Users/nancy/miniconda3/bin/python')
## Import libraries
library(dplyr, quietly = T)
library(knitr, quietly = T)
library(kableExtra, quietly = T)
## Import dataframe variable from Python runtime
df <- py$df
head(df)
library(reactable)
reactable(df)
## Preprocess the image links to allow rendering
df$Image = sprintf('![](%s)', df$Image)
## Hyperlink the titles
df$Title = sprintf("[%s](%s)", df$Title, df$URL)
## Drop the URL column
df$URL <- NULL
## Create table
kable(df) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
install.packages("formattable")
install.packages("formattable")
## Import libraries
library(dplyr, quietly = T)
library(knitr, quietly = T)
library(kableExtra, quietly = T)
## Import dataframe variable from Python runtime
df <- py$df
library(formattable)
formattable(df)
## Preprocess the image links to allow rendering
df$Image = sprintf('![](%s)', df$Image)
## Hyperlink the titles
df$Title = sprintf("[%s](%s)", df$Title, df$URL)
## Drop the URL column
df$URL <- NULL
## Create table
formattable(df)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
## Preprocess the image links to allow rendering
df$Image = sprintf('![](%s)', df$Image)
## Hyperlink the titles
df$Title = sprintf("[%s](%s)", df$Title, df$URL)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
library(reticulate)
use_python('/Users/nancy/miniconda3/bin/python')
## Import libraries
library(dplyr, quietly = T)
library(knitr, quietly = T)
library(kableExtra, quietly = T)
## Import dataframe variable from Python runtime
df <- py$df
library(reticulate)
use_python('/Users/nancy/miniconda3/bin/python')
## Import libraries
library(dplyr, quietly = T)
library(knitr, quietly = T)
library(kableExtra, quietly = T)
## Import dataframe variable from Python runtime
df <- py$df
kable(df, escape = F) %>%
column_spec(1, width = "10em") %>%
column_spec(2, width = "2cm")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
library(htmlwidgets)
library(slickR)
slickR(obj = nba_player_logo$uri[1:2], height = 100, width = "95%") %synch%
( slickR(obj = glue::glue('<p>{nba_player_logo$name[1:2]}</p>'),
slideType = 'p') +
settings(arrows = FALSE) )
library(htmlwidgets)
library(slickR)
slick_up_synch <- slickR(obj = nba_player_logo$uri, height = 100, width = "95%")
slick_down_synch <- slickR(obj = nba_player_logo$uri, height = 100, width = "95%")
slick_up_synch %synch% slick_down_synch
blogdown:::serve_site()
library(htmlwidgets)
library(slickR)
slickR(
obj         = c(nba_player_logo$uri[1:2],
glue::glue('<p>{nba_player_logo$name[1:2]}</p>')),
slideType   = c('img','p'),
slideId     = c('img','cap'),
slideIdx    = list(c(1,2),c(3,4)),
synchSlides = expand.grid(list('img','cap'),stringsAsFactors = FALSE),
height      = 100,
slickOpts   = list(list(dots=FALSE),list(dots=TRUE,arrows=FALSE))
)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
## Import libraries
library(dplyr, quietly = T)
library(knitr, quietly = T)
library(htmltools)
library(DT)
## Import dataframe variable from Python runtime
df <- py$df
library(reticulate)
use_python('/Users/nancy/miniconda3/bin/python')
## Import libraries
library(dplyr, quietly = T)
library(knitr, quietly = T)
library(htmltools)
library(DT)
## Import dataframe variable from Python runtime
df <- py$df
head(df)
## Preprocess the image links to allow rendering
df$Image = sprintf('![](%s)', df$Image)
## Hyperlink the titles
df$Title = sprintf("[%s](%s)", df$Title, df$URL)
## Drop the URL column
df$URL <- NULL
kable(df)
## Import libraries
library(dplyr, quietly = T)
library(knitr, quietly = T)
library(htmltools)
library(DT)
## Import dataframe variable from Python runtime
df <- py$df
datatable(head(df))
## Preprocess the image links to allow rendering
df$Image = sprintf('![](%s)', df$Image)
## Hyperlink the titles
df$Title = sprintf("[%s](%s)", df$Title, df$URL)
## Drop the URL column
df$URL <- NULL
head(df)
## Preprocess the image links to allow rendering
#df$Image = sprintf('![](%s)', df$Image)
## Hyperlink the titles
df$Title = sprintf("[%s](%s)", df$Title, df$URL)
## Preprocess the image links to allow rendering
#df$Image = sprintf('![](%s)', df$Image)
## Hyperlink the titles
df$Title = sprintf("[%s](%s)", df$Title, df$URL)
library(reticulate)
use_python('/Users/nancy/miniconda3/bin/python')
## Import libraries
library(dplyr, quietly = T)
library(knitr, quietly = T)
library(htmltools)
library(DT)
## Import dataframe variable from Python runtime
df <- py$df
## Preprocess the image links to allow rendering
#df$Image = sprintf('![](%s)', df$Image)
## Hyperlink the titles
df$Title = sprintf("[%s](%s)", df$Title, df$URL)
## Drop the URL column
df$URL <- NULL
head(df)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
library(reticulate)
use_python('/Users/nancy/miniconda3/bin/python')
library(reticulate)
use_python('/Users/nancy/miniconda3/bin/python')
library(reticulate)
use_python('/Users/nancy/miniconda3/bin/python')
library(knitr)
library(kableExtra)
nestdict <- py$nestdict
kable(head(nestdict)) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
## Import libraries
library(tidyverse)
library(circlepackeR)
library(hrbrthemes)
library(htmlwidgets)
library(data.tree)
## Import data
nestdict <- py$nestdict
## Prepare data format
nestdict$pathString <- paste("world",
nestdict$Category,
nestdict$Level,
sep = "/")
population <- as.Node(nestdict)
## Make the plot
circlepackeR(population,
size = "Population",
color_min = "hsl(56,80%,80%)",
color_max = "hsl(341,30%,40%)")
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
